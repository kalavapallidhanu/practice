name: CI/CD ‚Äì Azure App Service

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# üîß Change these to your values
env:
  AZURE_WEBAPP_NAME: your-app-service-name         # e.g. my-nodeapp-prod
  AZURE_WEBAPP_SLOT: production                    # or "staging" if you use a slot
  NODE_VERSION: "20.x"                             # set to your runtime version

concurrency:
  group: "deploy-${{ env.AZURE_WEBAPP_NAME }}"
  cancel-in-progress: true

jobs:
  build:
    name: Build & Package
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ‚¨áÔ∏è If you're NOT using Node.js, replace this block with your build tool (examples below).
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Run tests (optional)
        run: npm test --if-present

      - name: Build (optional)
        run: npm run build --if-present

      # üì¶ Create a deployable ZIP
      - name: Package app
        run: |
          mkdir -p package
          # Prefer a built dir if present (build/dist), else package the repo
          if [ -d "build" ]; then SRC="build";
          elif [ -d "dist" ]; then SRC="dist";
          else SRC=".";
          fi
          echo "Packaging $SRC into package/app.zip"
          (cd "$SRC" && zip -r ../package/app.zip . -x "node_modules/*" ".git/*")

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app
          path: package/app.zip
          if-no-files-found: error

  deploy:
    name: Deploy to Azure App Service
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: production
      url: ${{ steps.deploy.outputs.webapp-url }}  # Shows nice link on the run summary

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: app
          path: .

      # ‚úÖ OPTION A (simplest): Use the App Service publish profile secret
      - name: Deploy with publish profile
        id: deploy
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          slot-name: ${{ env.AZURE_WEBAPP_SLOT }}
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
          package: app.zip

      # üîí OPTION B: Use Service Principal (uncomment if you prefer SP over publish profile)
      # - name: Azure Login (Service Principal)
      #   uses: azure/login@v2
      #   with:
      #     creds: ${{ secrets.AZURE_CREDENTIALS }}  # {"clientId":"...","clientSecret":"...","tenantId":"...","subscriptionId":"..."}
      #
      # - name: Deploy with SP
      #   id: deploy
      #   uses: azure/webapps-deploy@v3
      #   with:
      #     app-name: ${{ env.AZURE_WEBAPP_NAME }}
      #     slot-name: ${{ env.AZURE_WEBAPP_SLOT }}
      #     package: app.zip


